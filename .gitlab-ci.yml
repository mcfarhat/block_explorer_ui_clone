stages:
 - build
 - test
 - deploy

variables:
  # Variables required by Common CI jobs
  CI_COMMON_JOB_VERSION: "1d271c28906d267c1172641bb2aa42727f16b513"
  DOCKER_BUILDER_TAG: "$CI_COMMON_JOB_VERSION"
  DOCKER_DIND_TAG: "$CI_COMMON_JOB_VERSION"
  IMAGE_REMOVER_TAG: "$CI_COMMON_JOB_VERSION"

include:
  - template: Workflows/Branch-Pipelines.gitlab-ci.yml
  - project: 'hive/common-ci-configuration'
    ref: 1d271c28906d267c1172641bb2aa42727f16b513 # develop
    file: '/templates/docker_image_jobs.gitlab-ci.yml'

docker-build:
  extends: .docker_image_builder_job_template
  stage: build
  before_script:
    - !reference [.docker_image_builder_job_template, before_script]
    - |
      echo -e "\e[0Ksection_start:$(date +%s):login[collapsed=true]\r\e[0KLogging to Docker registry..."
      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
      echo -e "\e[0Ksection_end:$(date +%s):login\r\e[0K"
  script:
    - |
      echo -e "\e[0Ksection_start:$(date +%s):tag[collapsed=true]\r\e[0KDetermining tag for the new image..."
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
        export TAG="latest"
      else
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $CI_COMMIT_REF_SLUG"
        export TAG="$CI_COMMIT_REF_SLUG"
      fi
      echo -e "\e[0Ksection_end:$(date +%s):tag\r\e[0K"
      echo -e "\e[0Ksection_start:$(date +%s):build[collapsed=true]\r\e[0KBaking image "$CI_REGISTRY_IMAGE:$TAG"..."
      scripts/build_instance.sh --progress=plain "$CI_PROJECT_DIR"
      echo "IMAGE_NAME=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" > docker-build.env
      echo -e "\e[0Ksection_end:$(date +%s):build\r\e[0K"
  artifacts:
    reports:
      dotenv: docker-build.env
  tags:
    - public-runner-docker

.node-job:
  image:
    name: node:18.15-alpine3.17
    entrypoint: []
  stage: test
  script:
    - |
      echo -e "\e[0Ksection_start:$(date +%s):deps[collapsed=true]\r\e[0KInstalling dependencies..."
      npm ci --cache .npm
      echo -e "\e[0Ksection_end:$(date +%s):deps\r\e[0K"
  cache:
    key: block-explorer-ui-cache-1
    paths:
      - .npm/
      - .next/
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    when: always
    expire_in: 1 week
  tags:
    - public-runner-docker

lint:
  extends: .node-job
  script:
    - !reference [.node-job, script]
    - |
      echo -e "\e[0Ksection_start:$(date +%s):lint[collapsed=true]\r\e[0KRunning linter..."
      npm run lint 2>&1 | tee npm-lint.log
      echo -e "\e[0Ksection_end:$(date +%s):lint\r\e[0K"
  artifacts:
    paths:
      - "npm-lint.log"

staging:deploy:
  stage: deploy
  needs:
    - docker-build
  variables:
    PORT: 5000
    API_ENDPOINT: http://192.168.4.250:3000
    CONTAINER_NAME: block-explorer-ui
  before_script:
    - |
      echo -e "\e[0Ksection_start:$(date +%s):login[collapsed=true]\r\e[0KLogging to Docker registry..."
      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
      echo -e "\e[0Ksection_end:$(date +%s):login\r\e[0K"
  script:
    - |
      scripts/run_instance.sh \
        --image="$IMAGE_NAME" \
        --api-endpoint="$API_ENDPOINT" \
        --port=$PORT \
        --name=$CONTAINER_NAME \
        --detach
  environment:
    name: staging
    action: start
    on_stop: staging:stop
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
    - if: $CI_COMMIT_BRANCH == 'kbotor/19-dockerisation-deployment-ci'
      when: manual
  tags:
    - hs-bexplorer

staging:stop:
  stage: deploy
  needs:
    - staging:deploy
  variables:
    CONTAINER_NAME: block-explorer-ui
    GIT_STRATEGY: none
  script:
    - docker ps -q --filter "name=$CONTAINER_NAME" | grep -q . && docker stop $CONTAINER_NAME
  environment:
    name: staging
    action: stop
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
      allow_failure: true
    - if: $CI_COMMIT_BRANCH == 'kbotor/19-dockerisation-deployment-ci'
      when: manual
      allow_failure: true
  tags:
    - hs-bexplorer
